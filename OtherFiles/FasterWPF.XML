<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FasterWPF</name>
    </assembly>
    <members>
        <member name="M:FasterWPF.CommonInternalExt.PerformSortOfKeysLevelOne``1(System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},FasterWPF.CommonExt.SortControlType)">
            <summary>
            This should NOT be called directly. Use SortByText instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <param name="column"></param>
            <param name="sortOrder"></param>
            <param name="ChildLookupDict"></param>
            <param name="items"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonInternalExt.PerformSortOfKeysLevelOneDateTime``1(System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},FasterWPF.CommonExt.SortControlType)">
            <summary>
            This should NOT be called directly. Use SortByText instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <param name="column"></param>
            <param name="sortOrder"></param>
            <param name="ChildLookupDict"></param>
            <param name="items"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonInternalExt.PerformSortOfKeysLevelOneDecimal``1(System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},FasterWPF.CommonExt.SortControlType)">
            <summary>
            This should NOT be called directly. Use SortByText instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <param name="column"></param>
            <param name="sortOrder"></param>
            <param name="ChildLookupDict"></param>
            <param name="items"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonInternalExt.PerformSortOfKeysLevelOneInteger``1(System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String},FasterWPF.CommonExt.SortControlType)">
            <summary>
            This should NOT be called directly. Use SortByText instead.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <param name="column"></param>
            <param name="sortOrder"></param>
            <param name="ChildLookupDict"></param>
            <param name="items"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonInternalExt.PerformSortOfKeysLevelTwo(System.Object,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortOrder,System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Object,System.Object}},System.Linq.IOrderedEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Tuple{System.Object,System.Object}}},System.Type,System.Type)">
            <summary>
            This should NOT be called directly. Use SortByText1AndThenBy2 instead.
            </summary>
            <param name="chain"></param>
            <param name="sortOrder"></param>
            <param name="sortOrder2"></param>
            <param name="sourceToSortOn"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonInternalExt.SetDefaultsForTextElementsAtRowCol``1(System.Object,System.Int32,System.Int32,System.Int32,System.Int32,FasterWPF.CommonExt.SortControlType,System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Tuple{System.Object,System.Object}},System.String,System.String)">
            <summary>
            This method assures that TextBlocks and Labels will always have an appropriate default value to sort on when sorting text by 1 and then by 2
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="row2"></param>
            <param name="column2"></param>
            <param name="sortControlType"></param>
            <param name="orderedKeys"></param>
            <param name="sourceToSortOn"></param>
            <param name="defaultValueForNull"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindContainersPropertyToParents``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
             DataBind the Property of a Composite's Container (e.g. Grid in GridComposite) to a Property on the Parent (T)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnParentThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindContainersPropertyToParents``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
             DataBind the Property of a Composite's Container (e.g. Grid in GridComposite) to a Property on the Parent (T) with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnContainer"></param>
            <param name="depPropertyOnParentThatContainerBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToAnother``3(FasterWPF.InnerChain{``2},System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Another Child's Property (Child Z)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="Z"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="rowZ"></param>
            <param name="columnZ"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnZThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToAnother``3(FasterWPF.InnerChain{``2},System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to Another Child's Property (Child Z) with ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="Z"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="rowZ"></param>
            <param name="columnZ"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnZThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToParents``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Property on the Parent (T)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnParentThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToParents``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to Property on the Parent (T) with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnParentThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToParents``1(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Composite (Border) to a Property on the Parent (T)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnParentThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToParents``1(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind the Property of a Composite (Border) to a Property on the Parent (T) with a Value Converter
            </summary>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnParentThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindParentsPropertytoContainers``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind a Property on the Parent (T) to the Property of a Composite's Container (e.g. Grid in GridComposite) 
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnParent"></param>
            <param name="depPropertyOnContainerThatParentBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindParentsPropertytoContainers``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind a Property on the Parent (T) to the Property of a Composite's Container (e.g. Grid in GridComposite) with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnParent"></param>
            <param name="depPropertyOnContainerThatParentBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindParentsPropertyToOneChilds``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind Property on the Parent (T) to One Child's Property (Child K)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnParent"></param>
            <param name="depPropertyOnKThatParentBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindParentsPropertyToOneChilds``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
             DataBind Property on the Parent (T) to One Child's Property (Child K) with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnParent"></param>
            <param name="depPropertyOnKThatParentBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindParentsPropertyToBorders``1(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind a Property on the Parent (T) to the Property of a Composite (Border) 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnParent"></param>
            <param name="depPropertyOnBorderThatParentBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindParentsPropertyToBorders``1(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind a Property on the Parent (T) to the Property of a Composite (Border) with a Value Converter
            </summary>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnParent"></param>
            <param name="depPropertyOnBorderThatParentBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindContainersPropertyToOneChilds``3(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Composite's Container (e.g. Grid in GridComposite) to One Child's Property (Child K). T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnContainer"></param>
            <param name="depPropertyOnKThatContainerBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindContainersPropertyToOneChilds``3(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind the Property of a Composite's Container (e.g. Grid in GridComposite) to One Child's Property (Child K) with a Value Converter. T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnContainer"></param>
            <param name="depPropertyOnKThatContainerBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToContainers``3(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to the Property of a Composite's Container (e.g. Grid in GridComposite). T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnContainerThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToContainers``3(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to the Property of a Composite's Container (e.g. Grid in GridComposite) with a Value Converter. T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnContainerThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindContainersPropertytoBorders``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Composite's Container (e.g. Grid in GridComposite) to the Property of a Composite (Border)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnContainer"></param>
            <param name="depPropertyOnBorderThatContainerBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindContainersPropertytoBorders``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind the Property of a Composite's Container (e.g. Grid in GridComposite) to the Property of a Composite (Border) with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnContainer"></param>
            <param name="depPropertyOnBorderThatContainerBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertytoContainers``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Composite (Border) to the Property of a Composite's Container (e.g. Grid in GridComposite) 
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnContainerThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertytoContainers``2(System.Windows.Controls.Border,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind the Property of a Composite (Border) to the Property of a Composite's Container (e.g. Grid in GridComposite) with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnContainerThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToBorders``2(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to the Property of a Composite (Border). T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnBorderThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToBorders``2(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to the Property of a Composite (Border) with a Value Converter. T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnBorderThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToOneChilds``2(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Composite (Border) to One Child's Property (Child K). T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnKThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToOneChilds``2(System.Windows.Controls.Border,System.String,System.Int32,System.Int32,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind the Property of a Composite (Border) to One Child's Property (Child K) with a Value Converter. T is the Parent.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnKThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToFE``1(System.Windows.Controls.Border,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Border to a Property on a FrameworkElement parameter
            </summary>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnParentThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToFE``1(System.Windows.Controls.Border,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind the Property of a Border to a Property on a FrameworkElement parameter with a Value Converter
            </summary>
            <typeparam name="T"></typeparam>
            <param name="border"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnParentThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToFE``3(FasterWPF.InnerChain{``2},System.Int32,System.Int32,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Framework Element Parameter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="FE"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="fe"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnFEThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToFE``3(FasterWPF.InnerChain{``2},System.Int32,System.Int32,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Framework Element Parameter with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="FE"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="fe"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnFEThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToFE``2(``0,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Framework Element Parameter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="FE"></typeparam>
            <param name="child"></param>
            <param name="fe"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnFEThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToFE``2(``0,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Framework Element Parameter with a ValueConverter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="FE"></typeparam>
            <param name="child"></param>
            <param name="fe"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnFEThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToDepObj(System.Windows.Controls.Border,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind the Property of a Border to a Property on a Dependency Object parameter
            </summary>
            <param name="border"></param>
            <param name="depObj"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnDObjThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindBordersPropertyToDepObj(System.Windows.Controls.Border,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
             DataBind the Property of a Border to a Property on a Dependency Object parameter with a Value Converter
            </summary>
            <param name="border"></param>
            <param name="depObj"></param>
            <param name="depPropertyOnBorder"></param>
            <param name="depPropertyOnDObjThatBorderBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToDepObj``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Dependency Object Parameter
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depObj"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnDObjThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToDepObj``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Dependency Object Parameter with a ValueConverter.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="rowK"></param>
            <param name="columnK"></param>
            <param name="depObj"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnDObjThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToDepObj``1(``0,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Dependency Object Parameter
            </summary>
            <typeparam name="K"></typeparam>
            <param name="child"></param>
            <param name="depObj"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnDObjThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="M:FasterWPF.CommonDatabinding.DataBindOneChildsPropertyToDepObj``1(``0,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.Data.IValueConverter)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Dependency Object Parameter with a ValueConverter.
            </summary>
            <typeparam name="K"></typeparam>
            <param name="child"></param>
            <param name="depObj"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnDObjThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="converter"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnChild``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 2 on Child K. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnChild``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 1 on Child K. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnContainer``2(FasterWPF.InnerChain{``1},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 1 on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnContainer``2(FasterWPF.InnerChain{``1},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{``0})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 1 on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnContainer``2(FasterWPF.InnerChain{``1},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
             Subscribe PreviewMouseDown Event with ClickCount of 2 on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnContainer``2(FasterWPF.InnerChain{``1},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{``0})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 2 on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnParent``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 1 on Parent T.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnParent``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{``0})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 1 on Parent T filtering by a Predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnParent``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 2 on Parent T.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnParent``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{``0})">
            <summary>
            Subscribe PreviewMouseDown Event with ClickCount of 2 on Parent T filtering by a Predicate.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.String,System.Action{System.Object,``2})">
            <summary>
            Subscribe Event on Child K. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.String,System.Action{System.Object,``2},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{``2}},System.Action{System.Reactive.EventPattern{``2}}})">
            <summary>
            Subscribe Event on Child K. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnChild``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.String,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}}})">
            <summary>
            Subscribe Dependency Property Event on Child K. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnChild``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.String,System.Action{System.Object,FasterWPF.ValueChangedEventArgs})">
            <summary>
            Subscribe Dependency Property Event on Child K. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnChild``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.String,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Predicate{``0})">
            <summary>
            Subscribe Dependency Property Event on Child K filtering by a Predicate. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.String,System.Action{System.Object,``2},System.Predicate{``0})">
            <summary>
            Subscribe Event on Child K filtering by a Predicate. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(FasterWPF.SettingsChain{``0},System.String,System.Action{System.Object,``1})">
            <summary>
            Subscribe Event on Parent. Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnParent``1(FasterWPF.SettingsChain{``0},System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}})">
            <summary>
            Subscribe Dependency Property Event on Parent. Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnParent``1(FasterWPF.SettingsChain{``0},System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Predicate{``0})">
            <summary>
            Subscribe Dependency Property Event on Parent with Predicate. Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeSelectionChangedOnParent``1(FasterWPF.SettingsChain{``0},System.Action{System.Object,System.Windows.Controls.SelectionChangedEventArgs})">
            <summary>
            Subscribe selection changed on a Parent. NOT meant to be used with child objects. Sets only one and only once. Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeSelectionChangedOnParent``1(FasterWPF.SettingsChain{``0},System.Action{System.Object,System.Windows.Controls.SelectionChangedEventArgs},System.Predicate{``0})">
            <summary>
            Conditionally subscribe selection changed on a Parent. NOT meant to be used with child objects. Sets only one and only once. Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnBorder``1(FasterWPF.SettingsChain{``0},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseLeftButtonDown on Composite (Border). Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnBorder``1(FasterWPF.SettingsChain{``0},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Conditionally subscribe PreviewMouseLeftButtonDown on Composite (Border). Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnBorder``1(FasterWPF.SettingsChain{``0},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border). Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnBorder``1(FasterWPF.SettingsChain{``0},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Conditionally subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border). Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(FasterWPF.SettingsChain{``0},System.String,System.Action{System.Object,``1},System.Predicate{``0})">
            <summary>
            Conditionally subscribe Event on Parent. Call within BeginSettings...EndSettings chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnBorder``1(FasterWPF.InnerChain{``0},System.Windows.FrameworkElement)">
            <summary>
            Subscribe PreviewMouseLeftButtonDown on Composite (Border) [from but not on child element]. This is for subscribing on-the-fly; e.g., if an element were unsubscribed and needs re-subscribing. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnBorder``1(FasterWPF.InnerChain{``0},System.Windows.FrameworkElement)">
            <summary>
            Subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border) [from but not on child element]. This is for subscribing on-the-fly; e.g., if an element were unsubscribed and needs re-subscribing. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnContainer``3(FasterWPF.InnerChain{``1},System.String,System.Action{System.Object,``2})">
            <summary>
            Subscribe any event by key on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnContainer``3(FasterWPF.InnerChain{``1},System.String,System.Action{System.Object,``2},System.Predicate{``0})">
            <summary>
            Conditionally subscribe any event by key on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnContainer``2(FasterWPF.InnerChain{``1},System.String,System.Action{System.Object,FasterWPF.ValueChangedEventArgs})">
            <summary>
            Subscribe any Dependency Property event by key on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnContainer``2(FasterWPF.InnerChain{``1},System.String,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Predicate{``0})">
            <summary>
            Conditionally subscribe any Dependency Property event by key on Composite Container. Call within BeginComposite...EndComposite chain.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(System.Windows.Controls.ContentControl,System.String,System.Int32,System.Int32,System.String,System.Action{System.Reactive.EventPattern{``2}})">
            <summary>
            Subscribe Event on Child. Call within AddComposite method.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(System.Windows.Controls.ContentControl,System.String,System.Int32,System.Int32,System.String,System.Action{System.Reactive.EventPattern{``2}},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{``2}},System.Action{System.Reactive.EventPattern{``2}}})">
            <summary>
            Subscribe Event on Child. Call within AddComposite method.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(``1,System.String,System.Int32,System.Int32,System.String,System.Action{System.Reactive.EventPattern{``2}})">
            <summary>
            Subscribe Event on Child.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(``1,``0,System.String,System.Int32,System.Int32,System.String,System.Action{System.Reactive.EventPattern{``2}})">
            <summary>
            Subscribe Event on Child.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnChild``3(System.Windows.Controls.ContentControl,System.String,System.Int32,System.Int32,System.String,System.Action{System.Reactive.EventPattern{``2}},System.Predicate{``0})">
            <summary>
            Subscribe Event on Child filtering by a Predicate. Call within AddComposite method.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnBorder``2(System.Windows.Controls.Border,System.String,System.String,System.Action{System.Reactive.EventPattern{``1}})">
            <summary>
            Subscribe Event on Composite (Border) itself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnBorder``1(System.Windows.Controls.Border,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}})">
            <summary>
            Subscribe Dependency Property Event on Composite (Border) itself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnBorder``2(System.Windows.Controls.Border,System.String,System.String,System.Action{System.Reactive.EventPattern{``1}},System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Conditionally subscribe Event on Composite (Border) itself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnBorder``1(System.Windows.Controls.Border,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Conditionally subscribe Dependency Property Event on Composite (Border) itself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="b"></param>
            <param name="key"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnContainer``3(System.Windows.Controls.ContentControl,System.String,System.String,System.Action{System.Reactive.EventPattern{``2}})">
            <summary>
            Subscribe any event by key on Composite's Container, e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnContainer``2(System.Windows.Controls.ContentControl,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}})">
            <summary>
            Subscribe any Dependency Property event by key on Composite's Container, e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnContainer``2(System.Windows.Controls.ContentControl,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Predicate{``0})">
            <summary>
            Subscribe any Dependency Property event by key on Composite's Container, e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnContainer``3(System.Windows.Controls.ContentControl,System.String,System.String,System.Action{System.Reactive.EventPattern{``2}},System.Predicate{``0})">
            <summary>
            Subscribe any event by key on Composite's Container, e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(``0,System.String,System.Action{System.Object,``1})">
            <summary>
            Subscribe Event on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(``0,System.String,System.Action{System.Object,``1},System.Predicate{``0})">
            <summary>
            Conditionally subscribe Event on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(``0,System.String,System.Action{System.Reactive.EventPattern{``1}},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{``1}},System.Action{System.Reactive.EventPattern{``1}}})">
            <summary>
            Subscribe Event on Parent. Signature for connectable is: (connectableObservable, actionDelegate).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(``0,System.String,System.Action{System.Reactive.EventPattern{``1}})">
            <summary>
            Subscribe Event on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeEventOnParent``2(``0,System.String,System.Action{System.Reactive.EventPattern{``1}},System.Predicate{``0})">
            <summary>
            Conditionally subscribe Event on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnParent``1(``0,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}})">
            <summary>
            Subscribe Event on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeDependencyEventOnParent``1(``0,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Predicate{``0})">
            <summary>
            Conditionally subscribe Event on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="deleg"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeSelectionChangedOnParent``1(``0,System.Action{System.Object,System.Windows.Controls.SelectionChangedEventArgs})">
            <summary>
            Sets selection changed on a Parent only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnBorder``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseLeftButtonDown on Composite (Border).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnBorder``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnBorder``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Conditionally subscribe PreviewMouseLeftButtonDown on Composite (Border).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnBorder``1(``0,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Conditionally subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border).
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeSelectionChangedOnParent``1(``0,System.Action{System.Object,System.Windows.Controls.SelectionChangedEventArgs},System.Predicate{``0})">
            <summary>
            Conditionally subscribe selection changed on a Parent. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="delegAction"></param>
            <param name="shouldSubscribe"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeSelectionChangedOnParent``1(``0)">
            <summary>
            Conditionally subscribe selection changed on a Parent. NOT meant to be used with child objects. Sets only one and only once. This is for subscribing on-the-fly 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseSingleClickOnBorder``1(``0,System.Windows.FrameworkElement)">
            <summary>
            Subscribe PreviewMouseLeftButtonDown on Composite (Border) [from but not on child element]. This is for subscribing on-the-fly.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SubscribeMouseDoubleClickOnBorder``1(``0,System.Windows.FrameworkElement)">
            <summary>
            Subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border) [from but not on child element]. This is for subscribing on-the-fly.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.DisposeEvents``1(``0)">
            <summary>
            Unsubscribe All Events in a Parent including ScrollViewer Events. This does NOT automatically recurse down thru all child Parents.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeAll``1(``0)">
            <summary>
            Unsubscribe All Events in a Parent excluding ScrollViewer Events (use DisposeEvents to include those.) This does NOT automatically recurse down thru all child Parents.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeBorderEventByKey``1(``0,System.String,System.String)">
            <summary>
            Unsubscribe by key and event name an event from Composite (Border) itself. NOT for unsubscribing Child events within a Composite.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeContainerEventByKey``1(``0,System.String,System.String)">
            <summary>
            Unsubscribe by key and event name an event from Composite's Container--e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseSingleClickOnContainerByKey``1(``0,System.String)">
            <summary>
            Unsubscribe PreviewMouseDown Event (with ClickCount of 1) by key from Composite's Container--e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseDoubleClickOnContainerByKey``1(``0,System.String)">
            <summary>
            Unsubscribe PreviewMouseDown Event (with ClickCount of 2) by key from Composite's Container--e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeParentEvent``1(``0,System.String)">
            <summary>
            Unsubscribe an Event on a Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="eventName"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeSelectionChangedOnParent``1(``0)">
            <summary>
            Unsubscribe SelectionChanged from a Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeBothChildAndBorderEventsByKey``1(``0,System.String)">
            <summary>
            Unsubscribe by key ALL events from a Composite. This may unsubscribe BOTH Child Events AND events on Border itself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeChildEventsByKey``1(``0,System.String)">
            <summary>
            Unsubscribe by key ALL Child events from a Composite. This will NOT unsubscribe events on Composite (Border) itself.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeBorderEventsByKey``1(``0,System.String)">
            <summary>
            Unsubscribe by key ALL events from Composite (Border) itself. NOT for unsubscribing Child events within a Composite.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeContainerEventsByKey``1(``0,System.String)">
            <summary>
            Unsubscribe by key ALL events from Composite's Container--e.g. if GridComposite this would be a Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeBorderEvents``1(``0)">
            <summary>
            Unsubscribe ALL events from ALL Composites (Borders), only from the Border itself. NOT for unsubscribing Child events within a Composite.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeContainerEventsAll``1(``0)">
            <summary>
            Unsubscribe ALL events from ALL Composite Containers--e.g. if GridComposites the containers would be Grids.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseSingleClickOnBorderAll``1(``0,System.Boolean)">
            <summary>
            Unsubscribe PreviewMouseLeftButtonDown from ALL Composites (Borders). This method is called on the Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseDoubleClickOnBorderAll``1(``0,System.Boolean)">
            <summary>
            Unsubscribe PreviewMouseLeftButtonDown with ClickCount of 2 from ALL Composites (Borders). This method is called on the Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseSingleClickOnBorderByKey``1(``0,System.String)">
            <summary>
            Unsubscribe by key PreviewMouseLeftButtonDown from Composite (Border) itself. This method is called on the Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseDoubleClickOnBorderByKey``1(``0,System.String)">
            <summary>
            Unsubscribe by key PreviewMouseLeftButtonDown with ClickCount of 2 from Composite (Border) itself. This method is called on the Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseDoubleClickOnChild``1(``0,System.String,System.Int32,System.Int32)">
            <summary>
            Unsubscribe PreviewMouseDown Event (with ClickCount of 2) by Event Name from a Child at X-Y (row-column) within a Composite (Border) found by key on a Parent T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseSingleClickOnChild``1(``0,System.String,System.Int32,System.Int32)">
            <summary>
            Unsubscribe PreviewMouseDown Event (with ClickCount of 1) by Event Name from a Child at X-Y (row-column) within a Composite (Border) found by key on a Parent T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseSingleClickOnParent``1(``0)">
            <summary>
            Unsubscribe PreviewMouseDown Event (with ClickCount of 1) by Event Name from a Parent T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeMouseDoubleClickOnParent``1(``0)">
            <summary>
            Unsubscribe PreviewMouseDown Event (with ClickCount of 2) by Event Name from a Parent T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UnsubscribeChildEvent``1(``0,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Unsubscribe an Event by Event Name from a Child at X-Y (row-column) within a Composite (Border) found by key on a Parent T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setAnyEventByKeyOnContainer``3(``0,``1,System.String,System.String,System.Action{System.Reactive.EventPattern{``2}},System.Predicate{``1})">
            <summary>
            Sets any event on a parent container only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setAnyEventByKeyOnContainer``3(``0,``1,System.String,System.String,System.Action{System.Reactive.EventPattern{``2}},System.Predicate{``1},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{``2}},System.Action{System.Reactive.EventPattern{``2}}})">
            <summary>
            Sets any event on a parent container only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setAnyEventOnceOnParent``2(``0,System.String,System.Action{System.Reactive.EventPattern{``1}},System.Predicate{``0})">
            <summary>
            Sets any event on a parent container only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setAnyEventOnceOnParent``2(``0,System.String,System.Action{System.Reactive.EventPattern{``1}},System.Predicate{``0},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{``1}},System.Action{System.Reactive.EventPattern{``1}}})">
            <summary>
            Sets any event on a parent container only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setAnyDependencyEventOnceOnParent``1(``0,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Predicate{``0})">
            <summary>
            Sets any event on a parent container only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setSelectionChanged``1(``0,System.Windows.Controls.SelectionChangedEventHandler,System.Predicate{``0})">
            <summary>
            Sets selection changed on a parent container only. NOT meant to be used with child objects. Sets only one and only once.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setSingleClick(System.Windows.FrameworkElement,System.String,System.Windows.Input.MouseButtonEventHandler,System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Subscribe PreviewMouseLeftButtonDown on Composite (Border) with a conditional predicate.
            </summary>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.setDoubleClick(System.Windows.FrameworkElement,System.String,System.Windows.Input.MouseButtonEventHandler,System.Predicate{System.Windows.Controls.Border})">
            <summary>
            Subscribe PreviewMouseLeftButtonDown with ClickCount of 2 on Composite (Border) with a conditional predicate.
            </summary>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="deleg"></param>
            <param name="peb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SortByText``1(``0,System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortControlType)">
            <summary>
            Sort Composites based on the TextBlock or Label at a specific row-column position within a Composite. If there is no TextBlock or Label, it just tacks the Composite on at the end.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="sortOrder"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SortByText``1(``0,System.Object,System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortControlType)">
            <summary>
            Sort Composites based on the TextBlock or Label at a specific row-column position within a Composite. Args typically implements FasterWPF.CommonExt.ISortArgs. If there is no TextBlock or Label, it just tacks the Composite on at the end.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="args"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="sortOrder"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SortByText1AndThenBy2``1(``0,System.Int32,System.Int32,System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortControlType)">
             <summary>
            Sort Composites based on the TextBlock or Label at a specific row-column position within a Composite, and then by a 2nd position. If there is no TextBlock or Label, it treats the position as an Empty String.
             </summary>
             <typeparam name="T"></typeparam>
             <param name="chain"></param>
             <param name="row"></param>
             <param name="column"></param>
             <param name="row2"></param>
             <param name="column2"></param>
             <param name="sortOrder"></param>
             <param name="sortOrder2"></param>
             <param name="sortControlType"></param>
             <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SortByText1AndThenBy2``1(``0,System.Object,System.Int32,System.Int32,System.Int32,System.Int32,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortOrder,FasterWPF.CommonExt.SortControlType)">
            <summary>
            Sort Composites based on the TextBlock or Label at a specific row-column position within a Composite, and then by a 2nd position. Args typically implements FasterWPF.CommonExt.ISortArgs. If there is no TextBlock or Label, it treats the position as a default null value based on data type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="args"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="row2"></param>
            <param name="column2"></param>
            <param name="sortOrder"></param>
            <param name="sortOrder2"></param>
            <param name="sortControlType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FilterByText``1(``0,System.Int32,System.Int32,System.Predicate{System.String})">
            <summary>
            Filter the items in the ListBox based on the text at a specific row-column position within an item
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="filterPredicate"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FilterByText1And2``1(``0,System.Int32,System.Int32,System.Int32,System.Int32,System.Predicate{System.Tuple{System.String,System.String}})">
            <summary>
            Filter the items in the ListBox based on the text at two specific row-column positions within an item
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="row2"></param>
            <param name="column2"></param>
            <param name="filterPredicate"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FilterByText1And2And3``1(``0,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Predicate{System.Tuple{System.String,System.String,System.String}})">
            <summary>
            Filter the items in the ListBox based on the text at three specific row-column positions within an item
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="row2"></param>
            <param name="column2"></param>
            <param name="row3"></param>
            <param name="column3"></param>
            <param name="filterPredicate"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.ShowGridLinesOnGridComposite``1(System.Windows.Controls.ContentControl,``0)">
            <summary>
            Show Grid Lines on the Composite's Grid
            </summary>
            <typeparam name="Grid"></typeparam>
            <param name="chain"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildLookupDictionary``1(``0)">
            <summary>
            Get a dictionary that contains all child FrameworkElements by fine-grained key, e.g. guid_0_1  
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetParentFromChildElement``1(System.Windows.FrameworkElement)">
            <summary>
            Get Parent from a Child Framework Element inside a Composite, e.g. from a TextBox or Image
            </summary>
            <typeparam name="T"></typeparam>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetBorderFromChildElement``1(System.Windows.FrameworkElement)">
            <summary>
            Get Border of composite from a Child Framework Element, e.g. from a TextBox or Image
            </summary>
            <typeparam name="T"></typeparam>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetBorderFromChildStackPanel(System.Windows.Controls.StackPanel)">
            <summary>
            Get Border of composite from the Child StackPanel that contains the container, e.g. that contains Grid of a GridComposite
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetTFromChildContentControl``1(System.Windows.Controls.ContentControl)">
            <summary>
             Get Parent T of a composite from the Child StackPanel that contains the container, e.g. that contains Grid of a GridComposite
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildKeysFromComposite``1(``0,System.String)">
            <summary>
            Get fine-grained child keys (e.g. guid_0_1) from Child Lookup Dictionary that match based on composite key (e.g. guid)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildrenFromComposite``1(``0,System.String)">
            <summary>
            Get children from inside composite based on composite key (e.g. guid)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetContainerFromComposite``2(``1,System.Windows.Controls.Border)">
            <summary>
            Get the container K (e.g. Grid if a GridComposite) from a composite (with a parent T)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="composite"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetContainerFromComposite``2(``1,System.String)">
            <summary>
            Get the container K (e.g. Grid if a GridComposite) from a composite by key
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetParentFromComposite``1(System.Windows.Controls.Border)">
            <summary>
            Get Parent from Composite, a.k.a from the Border that is the root of the Composite
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildLookupDictionaryFromComposite``1(System.Windows.Controls.Border)">
            <summary>
            Get Child Lookup Dictionary of Parent from an individual Composite. Child Lookup Dictionary contains all children from all composites in the parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildFromComposite``2(System.Windows.Controls.Border,System.Int32,System.Int32)">
            <summary>
            Get Child K at X-Y (row, column) from Composite using IComposite method (rather than Child Lookup Dictionary)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildViaLookupDictionary``2(``1,System.String,System.Int32,System.Int32)">
            <summary>
            Get Child K at X-Y (row, column) from Composite using Child Lookup Dictionary
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetFrameworkElementFromComposite``1(System.Windows.Controls.Border,System.Int32,System.Int32)">
            <summary>
             Get Child FrameworkElement at X-Y (row, column) from Composite using IComposite method (rather than Child Lookup Dictionary)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.IsChildOnComposite``2(System.Windows.Controls.Border,System.Int32,System.Int32)">
            <summary>
            Check if Child K exists at X-Y (row, column) on Composite looking up via Child Lookup Dictionary
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetChildFromParent``2(``1,System.String,System.Int32,System.Int32)">
            <summary>
            Get Child from Parent based on Key (guid) and X-Y (row, column)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.IsCompositeOnParent``1(``0,System.String)">
            <summary>
            Check if Composite exists on Parent based on Key (guid). Key cannot be null. 
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetCompositeFromParent``1(``0,System.String)">
            <summary>
            Get Composite from Parent based on Key (guid). Key cannot be null. If Key not found, an exception will be thrown.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetCompositeFromCompositeLookupDictionary``1(``0,System.String)">
            <summary>
            Get Composite from Parent via Composite Lookup Dictionary based on Key (guid). Key cannot be null. If Key not found, an exception will be thrown.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetCompositeLookupDictionary``1(``0)">
            <summary>
             Get dictionary from Parent that contains all Composites (Borders) stored by key, e.g. guid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetCompositeLookupDictionaryFromComposite``1(System.Object)">
            <summary>
            Get dictionary from Parent by way of Composite that contains all Composites (Borders) stored by key, e.g. guid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetOrderedKeyList``1(``0)">
            <summary>
            Get list of Composite Keys (guids) from Parent. List of Keys is in order that they were added.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetKey(System.Windows.Controls.Border)">
            <summary>
            Get Key (guid) of Composite (Border)
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetKey(System.Windows.Input.MouseButtonEventArgs,System.Object)">
            <summary>
            Get Key (guid) of Composite (Border) where it is passed in as type object (sender).
            </summary>
            <param name="e"></param>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddToDisposablesDictionary(System.String,System.IDisposable,System.Collections.Generic.Dictionary{System.String,System.IDisposable})">
            <summary>
            Add key and IDisposable (value) to the Disposables Dictionary that is passed-in
            </summary>
            <param name="key"></param>
            <param name="evd"></param>
            <param name="eventsList"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.GetDisposablesDictionary``1(``0)">
            <summary>
            Get dictionary of subscribed child events from Parent. Disposing event unsubscribes the event.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetAttachedPropertiesDictionary``1(``0)">
            <summary>
            Get dictionary that contains all settings that are to be applied as Attached Properties
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetAttachedPropertiesByRowColDictionary``1(``0)">
            <summary>
            Get dictionary stored inside the main one that also contains all settings that are to be applied as Attached Properties by X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetDisposablesDictionaryFromBorder(System.Windows.Controls.Border)">
            <summary>
            Get dictionary of subscribed child events from Border. Disposing event unsubscribes the event.
            </summary>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.BeginComposite``1(``0)">
            <summary>
            Start of a BeginComposite...EndComposite chain of methods used to build a Composite. This method automatically creates a GUID to identify the Composite.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.BeginComposite``1(``0,System.String)">
            <summary>
            Start of a BeginComposite...EndComposite chain of methods used to build a Composite. Key parameter is used to identify the Composite; typically, this may be a GUID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.EndComposite``2(FasterWPF.InnerChain{``0},``1)">
            <summary>
            End of a BeginComposite...EndComposite chain of methods used to build a Composite. Args may define more properties related to Composite, else just set to null.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <param name="chain"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.EndComposite``2(FasterWPF.InnerChain{``0},``1,System.Object)">
            <summary>
            End of a BeginComposite...EndComposite chain of methods used to build a Composite. OverrideGridSettings allows specifying Grid Settings unique to this Composite.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <param name="chain"></param>
            <param name="args"></param>
            <param name="overrideGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddExisting``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,``0)">
            <summary>
            Add an existing FrameworkElement of type K to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="objToAdd"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddAnyIParent``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Action{``0})">
            <summary>
            Add a new IParent of type K to the Composite at X-Y (row, column). This IParent can then add on its own Composites.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="initializeIParent"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddAnything``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32)">
            <summary>
            Automatically instantiates a FrameworkElement of type K and adds it to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddLabel``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String,System.Windows.Media.Brush)">
            <summary>
            Add Label to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="newText"></param>
            <param name="newBrush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddLabel``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String,System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Add Label to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="newText"></param>
            <param name="newBrush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddLabel``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush)">
            <summary>
            Add Label to the Composite at X-Y (row, column), also specifying width and height
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="newText"></param>
            <param name="newBrush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddLabelSettingBackgroundViaStyle``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String,System.Windows.Media.Brush)">
            <summary>
            Add Label to the Composite at X-Y (row, column) Setting the Background Brush Via a Style
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="newText"></param>
            <param name="newBrush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddLabelSettingBackgroundViaStyle``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String,System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Add Label to the Composite at X-Y (row, column) Setting the Background Brush Via a Style
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="newText"></param>
            <param name="newBrush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddLabelSettingBackgroundViaStyle``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush)">
            <summary>
            Add Label to the Composite at X-Y (row, column), also specifying width and height Setting the Background Brush Via a Style
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="newText"></param>
            <param name="newBrush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddText``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Add text as a Run set on the Inlines collection of a TextBlock to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="newText"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddImage``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String,System.UriKind,System.Double)">
            <summary>
            Add Image to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="imageUri"></param>
            <param name="uriKind"></param>
            <param name="imageWidth"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddImage``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.String,System.UriKind,System.Double,System.Int32,System.Int32)">
            <summary>
            Add Image to the Composite at X-Y (row, column), also specifying RowSpan and ColumnSpan for use in a Grid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="imageUri"></param>
            <param name="uriKind"></param>
            <param name="imageWidth"></param>
            <param name="rowSpan"></param>
            <param name="colSpan"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddGeometry``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double)">
            <summary>
            Add Geometry to the Composite at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="imageUri"></param>
            <param name="uriKind"></param>
            <param name="imageWidth"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.AddGeometry``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Int32,System.Int32)">
            <summary>
            Add Geometry to the Composite at X-Y (row, column), also specifying RowSpan and ColumnSpan for use in a Grid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="imageUri"></param>
            <param name="uriKind"></param>
            <param name="imageWidth"></param>
            <param name="rowSpan"></param>
            <param name="colSpan"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.ShowGridLinesOnGridComposite``1(FasterWPF.InnerChain{``0})">
            <summary>
            Show Grid Lines on the Composite's Grid.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.ModifyAtXY``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,System.Action{``0})">
            <summary>
             Modify Child K at Row X and Column Y Via Action
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="actionToModifyK"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SetSelectorClassAtXY``2(FasterWPF.InnerChain{``1},System.Int32,System.Int32,FasterWPF.SettingsManager.SelectorPosition,System.String)">
            <summary>
             Set Selector Class Name on Child K at Row X and Column Y
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="actionToModifyK"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SetMouseOverColorOnContainer``2(FasterWPF.InnerChain{``1},System.Windows.Media.Brush)">
            <summary>
            Set MouseOverColor on Composite's Container, e.g. if GridComposite this would be a Grid
            </summary>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="brush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.SetColorOnContainer``2(FasterWPF.InnerChain{``1},System.Windows.Media.Brush)">
            <summary>
            Set Background Color on Composite's Container, e.g. if GridComposite this would be a Grid
            </summary>
            <typeparam name="C"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="brush"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetTextBlock``1(``0,System.String,System.Int32,System.Int32)">
            <summary>
            Get TextBlock Child from a Parent T. This is NOT meant to be called from a Composite (aka Border) but from the Parent T.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.GetParentFromContentControlOfComposite``1(System.Windows.Controls.ContentControl)">
            <summary>
            Get Parent from the internal ContentControl of a composite. NOT meant to be called from derived Types (Child Elements)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="childElement"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.RemoveAll``1(``0)">
            <summary>
            Removes all child Composites from IParent. NOTE: Call DisposeEventsOnAllParents prior to calling RemoveAll in order to unsubscribe events (to prevent memory leaks.)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.RemoveByKey``1(``0,System.String)">
            <summary>
            Removes child Composite from IParent by key (e.g. guid). NOTE: If Composite being removed itself contains an IParent, call DisposeEventsOnAllParents on that internal IParent prior to calling RemoveByKey in order to unsubscribe events (to prevent memory leaks.)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
        </member>
        <member name="M:FasterWPF.CommonExt.UpdateTextBlocks``1(``0,System.Int32,System.Int32,System.Int32,System.Int32,System.Action{System.Windows.Controls.TextBlock})">
            <summary>
            Updates a range of TextBlocks at the given row-column cell position beginning at rowStart which is zero-based.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="count"></param>
            <param name="updateAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.UpdateTextFoundByText``1(``0,System.String,System.String,System.String)">
            <summary>
            Update a TextBlock Located in a Container by the Current Text Value of the TextBlock. This is meant to be a one-for-one update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.UpdateLabelFoundByContent``1(``0,System.String,System.String,System.String)">
            <summary>
            Update a Label Located in a Container by the Current Content Value of the Label. This is meant to be a one-for-one update.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FindLabelByContent``1(``0,System.String,System.String)">
            <summary>
            Find a Label Located in a Container by the Current Content Value of the Label. This is meant to return only the FirstOrDefault value located.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="oldValue"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FindTextBlockByText``1(``0,System.String,System.String)">
            <summary>
            Find a TextBlock Located in a Container by the Current Text Value of the TextBlock. This is meant to return only the FirstOrDefault value located.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="oldValue"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FindLabelsByContent``1(``0,System.String,System.String)">
            <summary>
            Find Labels Located in a Container by the Current Content Value of each Label.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="contentToFind"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.CommonExt.FindTextBlocksByText``1(``0,System.String,System.String)">
            <summary>
            Find TextBlocks Located in a Container by the Current Text Value of each TextBlock.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="textToFind"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.TriggerDataBinding.DataBindOneChildsPropertyToFEViaTrigger``2(``0,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode,System.Windows.DependencyProperty,System.Object)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Framework Element Parameter via Trigger
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="FE"></typeparam>
            <param name="child"></param>
            <param name="fe"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnFEThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
            <param name="triggerDepPropertyOnK"></param>
        </member>
        <member name="T:FasterWPF.InnerChain`1">
            <summary>
            Type that is passed-along each call in the BeginComposite...EndComposite chain
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FasterWPF.StyleDataBinding.DataBindOneChildsPropertyToFEViaStyle``2(``0,System.Windows.FrameworkElement,System.Windows.DependencyProperty,System.Windows.DependencyProperty,System.Windows.Data.UpdateSourceTrigger,System.Windows.Data.BindingMode)">
            <summary>
            DataBind One Child's Property (Child K) to Property on Framework Element Parameter via Style
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="FE"></typeparam>
            <param name="child"></param>
            <param name="fe"></param>
            <param name="depPropertyOnK"></param>
            <param name="depPropertyOnFEThatKBindsTo"></param>
            <param name="uSourceTrigger"></param>
            <param name="bMode"></param>
        </member>
        <member name="T:FasterWPF.IParent">
            <summary>
             Implemented on any class that supports adding or removing Composites
            </summary>
        </member>
        <member name="M:FasterWPF.ButtonExt.Initialize(System.Windows.Controls.Button,System.Double,System.Double,FasterWPF.ContainerType)">
            <summary>
            Initialize a Button control.
            </summary>
            <param name="source"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ButtonExt.Initialize(System.Windows.Controls.Button,System.Double,System.Double,FasterWPF.ContainerType,System.String,System.String,System.String,System.String,System.String,System.String,System.Windows.Thickness,System.Windows.VerticalAlignment,System.Windows.HorizontalAlignment)">
            <summary>
            Initialize a Button control applying Brushes for Normal, OnMouseOver, and Pressed.
            </summary>
            <param name="source"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ContentControlExt.Initialize(System.Windows.Controls.ContentControl,System.Double,System.Double,FasterWPF.ContainerType,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Thickness)">
            <summary>
            This Initialize method is for explicit ContentControls ONLY.
            </summary>
            <param name="source"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="containerType"></param>
            <param name="borderBrush"></param>
            <param name="borderThickness"></param>
            <param name="background"></param>
            <param name="padding"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ContentControlExt.Initialize(System.Windows.Controls.ContentControl,System.Double,System.Double,FasterWPF.ContainerType,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush)">
            <summary>
            This Initialize method is for explicit ContentControls ONLY.
            </summary>
            <param name="source"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="containerType"></param>
            <param name="borderBrush"></param>
            <param name="borderThickness"></param>
            <param name="background"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ContentControlExt.Initialize(System.Windows.Controls.ContentControl,FasterWPF.ContainerType,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush)">
            <summary>
            This Initialize method is for explicit ContentControls ONLY.
            </summary>
            <param name="source"></param>
            <param name="containerType"></param>
            <param name="borderBrush"></param>
            <param name="borderThickness"></param>
            <param name="background"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ContentControlExt.Initialize(System.Windows.Controls.ContentControl,FasterWPF.ContainerType,System.Windows.Media.Brush,System.Windows.Thickness)">
            <summary>
            This Initialize method is for explicit ContentControls ONLY.
            </summary>
            <param name="source"></param>
            <param name="containerType"></param>
            <param name="borderBrush"></param>
            <param name="borderThickness"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ContentControlExt.Initialize(System.Windows.Controls.ContentControl,FasterWPF.ContainerType)">
            <summary>
            This Initialize method is for explicit ContentControls ONLY.
            </summary>
            <param name="source"></param>
            <param name="containerType"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.GetObservableFromBorder``1(System.Windows.Controls.Border,System.Int32,System.Int32,System.String)">
            <summary>
            Get an Observable from a Child at row-column with eventName from a Composite (Border)
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="composite"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.GetObservableFromParent``2(``1,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Get an Observable from a Child at key-row-column with eventName from a Parent
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.GetObservableFromParent``2(``1,System.String)">
            <summary>
            Get an Observable from a parent with eventName
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.GetSubjectFromBorder(System.Windows.Controls.Border,System.Int32,System.Int32,System.String)">
            <summary>
            Get a Subject from a Child at row-column with eventName from a Composite (Border)
            </summary>
            <param name="composite"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.GetSubjectFromParent``1(``0,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Get a Subject from a Child at key-row-column with eventName from a Parent
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservableByClassName``1(System.Windows.FrameworkElement,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,``0)">
            <summary>
            Fire an Observable from a Child at key-row-column with eventName and eventArgs from a Parent. Find the Parent via Selector Class name (first traversing up then down)
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="startingSource"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="maxNumParentsToGoUpToGetWindow"></param>
            <param name="nameOfWindowType"></param>
            <param name="parentClassName"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservableByClassName``1(System.Windows.FrameworkElement,System.Int32,System.String,System.String,System.String,System.String,``0)">
            <summary>
            Fire an Observable from a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (first traversing up then down)
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="startingSource"></param>
            <param name="maxNumParentsToGoUpToGetWindow"></param>
            <param name="nameOfWindowType"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservableByClassName``1(System.Windows.Window,System.String,System.String,System.String,``0)">
            <summary>
            Fire an Observable from a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="startingSource"></param>
            <param name="maxNumParentsToGoUpToGetWindow"></param>
            <param name="nameOfWindowType"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservable``2(``1,System.Windows.Controls.Border,System.Int32,System.Int32,System.String,``0)">
            <summary>
            Fire an Observable from a Child at row-column with eventName and eventArgs from a Composite (Border) and a Parent T
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="composite"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservable``2(``1,System.String,System.Int32,System.Int32,System.String,``0)">
            <summary>
            Fire an Observable from a Child at key-row-column with eventName and eventArgs from a Parent T
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservableOnParent``2(``1,System.String,``0)">
            <summary>
            Fire an Observable that exists on a parent T with eventName and eventArgs
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireObservableOnParent``2(System.Windows.Window,System.String,System.String,``0)">
            <summary>
            Fire an Observable that exists on a parent T with eventName and eventArgs. Find the Parent via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.FireSingleClickOnParent``1(System.Windows.Window,System.String,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Fire a Mouse Single Click Observable that exists on a parent T with eventName and eventArgs. Find the Parent via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="eventName"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeSingleClickOnParent``1(System.Windows.Window,System.String,System.Action{System.Reactive.EventPattern{System.Windows.Input.MouseButtonEventArgs}})">
            <summary>
            Subscribe a Mouse Single Click Observable to a Parent with eventName and eventArgs. Find the Parent via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="mainWindow"></param>
            <param name="parentClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeObservableOnParent``2(System.Windows.Window,System.String,System.String,System.Action{System.Reactive.EventPattern{``1}})">
            <summary>
            Subscribe an Observable to a Parent with eventName and eventArgs. Find the Parent via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="mainWindow"></param>
            <param name="parentClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeObservableOnParent``2(System.Windows.Window,System.String,System.String,System.Action{System.Reactive.EventPattern{``1}},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{``1}},System.Action{System.Reactive.EventPattern{``1}}})">
            <summary>
            Subscribe a Connectable Observable to a Parent with eventName and eventArgs. Find the Parent via Selector Class names (traversing down from Window). Signature for connectable is: (connectableObservable, actionDelegate).
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="mainWindow"></param>
            <param name="parentClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeObservableByClassName``3(System.Windows.FrameworkElement,System.Int32,System.String,System.String,System.String,System.String,System.Action{System.Reactive.EventPattern{``2}})">
            <summary>
            Subscribe an Observable to a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (first traversing up then down)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="startingSource"></param>
            <param name="maxNumParentsToGoUpToGetWindow"></param>
            <param name="nameOfWindowType"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeObservableByClassName``3(System.Windows.Window,System.String,System.String,System.String,System.Action{System.Reactive.EventPattern{``2}})">
            <summary>
            Subscribe an Observable to a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="mainWindow"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeDepEventByClassName``3(System.Windows.FrameworkElement,System.Int32,System.String,System.String,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}})">
            <summary>
            Subscribe a Dependency Event Observable to a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (first traversing up then down)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="startingSource"></param>
            <param name="maxNumParentsToGoUpToGetWindow"></param>
            <param name="nameOfWindowType"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeDepEventByClassName``3(System.Windows.Window,System.String,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}})">
            <summary>
             Subscribe a Dependency Event Observable to a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (traversing down from Window)
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="mainWindow"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.Observables.ObservableHelper.SubscribeDepEventByClassName``3(System.Windows.Window,System.String,System.String,System.String,System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Action{System.Reactive.Subjects.IConnectableObservable{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}},System.Action{System.Reactive.EventPattern{FasterWPF.ValueChangedEventArgs}}})">
            <summary>
             Subscribe a Dependency Event Observable to a Child with eventName and eventArgs from a Parent. Find the Parent and Child (First matching) via Selector Class names (traversing down from Window). Signature for connectable is: (connectableObservable, actionDelegate).
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <typeparam name="TEventArgs"></typeparam>
            <param name="mainWindow"></param>
            <param name="parentClassName"></param>
            <param name="childClassName"></param>
            <param name="eventName"></param>
            <param name="actionDelegate"></param>
        </member>
        <member name="M:FasterWPF.ScrollViewerStyle.ApplyScrollViewerStrategy(System.Windows.Controls.ScrollViewer,System.String,System.String,System.String)">
            <summary>
            Apply Default Style to ScrollViewer
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ScrollViewerStyle.ApplyToScrollViewer``1(``0,System.String,System.String,System.String)">
            <summary>
            Apply Default Style to T that has a ScrollViewer
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.ScrollViewerStyle.ApplyScrollViewerStrategy``1(``0,System.String,System.String,System.String)">
            <summary>
            Apply Default Style to T that has a ScrollViewer
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Dialogs.DialogHelpers.ShowListBoxDialog(System.Windows.Controls.Canvas,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,FasterWPF.ListBoxSettings,FasterWPF.TitleSettings,FasterWPF.LabelSettings,System.String,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Boolean,FasterWPF.Helpers.SetFocus,System.Int32,System.Action{System.Windows.Controls.ListBox},System.Action{System.Object,System.Windows.Controls.SelectionChangedEventArgs},System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            Display a ListBox Dialog. Will NOT display if another dialog with the SAME dialogGuid is already displaying. buildFormAction contains StackPanel for body, okButton Border, cancelButton Border, and title Label.
            </summary>
            <param name="canVas"></param>
            <param name="dialogGuid"></param>
            <param name="width"></param>
            <param name="internarlGridRowHeight"></param>
            <param name="borderWidth"></param>
            <param name="borderHeight"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="dialogBoxBorder"></param>
            <param name="dialogBoxBorderThickness"></param>
            <param name="borderBackground"></param>
            <param name="listBoxSettings"></param>
            <param name="titleSettings"></param>
            <param name="labelSettings"></param>
            <param name="questionDefaultText"></param>
            <param name="listBoxMargin"></param>
            <param name="comboBoxBackground"></param>
            <param name="comboBoxMaxLength"></param>
            <param name="buttonBackgrounds"></param>
            <param name="buttonBorders"></param>
            <param name="buttonOnMouseOverColors"></param>
            <param name="setQuestionBoxFocusType"></param>
            <param name="secondsToDelay"></param>
            <param name="OKClickAction"></param>
            <param name="CANCELClickAction"></param>
            <param name="COMMON_CLOSEClickAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Dialogs.DialogHelpers.ShowComboBoxDialog(System.Windows.Controls.Canvas,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,FasterWPF.ComboBoxSettings,FasterWPF.TitleSettings,FasterWPF.LabelSettings,System.String,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Boolean,FasterWPF.Helpers.SetFocus,System.Int32,System.Action{System.Windows.Controls.ComboBox},System.Action{System.Object,System.Windows.Controls.SelectionChangedEventArgs},System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            Display a ComboBox Dialog. Will NOT display if another dialog with the SAME dialogGuid is already displaying. buildFormAction contains StackPanel for body, okButton Border, cancelButton Border, and title Label.
            </summary>
            <param name="canVas"></param>
            <param name="dialogGuid"></param>
            <param name="width"></param>
            <param name="internarlGridRowHeight"></param>
            <param name="borderWidth"></param>
            <param name="borderHeight"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="dialogBoxBorder"></param>
            <param name="dialogBoxBorderThickness"></param>
            <param name="borderBackground"></param>
            <param name="comboBoxSettings"></param>
            <param name="titleSettings"></param>
            <param name="labelSettings"></param>
            <param name="questionDefaultText"></param>
            <param name="comboBoxMargin"></param>
            <param name="comboBoxBackground"></param>
            <param name="comboBoxMaxLength"></param>
            <param name="buttonBackgrounds"></param>
            <param name="buttonBorders"></param>
            <param name="buttonOnMouseOverColors"></param>
            <param name="setQuestionBoxFocusType"></param>
            <param name="secondsToDelay"></param>
            <param name="OKClickAction"></param>
            <param name="CANCELClickAction"></param>
            <param name="COMMON_CLOSEClickAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Dialogs.DialogHelpers.ShowQuestionBoxDialog(System.Windows.Controls.Canvas,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,FasterWPF.TitleSettings,FasterWPF.LabelSettings,System.String,System.Windows.Thickness,System.Windows.Media.Brush,System.Int32,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Boolean,FasterWPF.Helpers.SetFocus,System.Int32,System.Action{System.String},System.Action{System.String},System.Action{System.String})">
            <summary>
            Display a Question Box Dialog. Will NOT display if another dialog with the SAME dialogGuid is already displaying. buildFormAction contains StackPanel for body, okButton Border, cancelButton Border, and title Label.
            </summary>
            <param name="canVas"></param>
            <param name="dialogGuid"></param>
            <param name="labelCaption"></param>
            <param name="width"></param>
            <param name="internarlGridRowHeight"></param>
            <param name="borderWidth"></param>
            <param name="borderHeight"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="dialogBoxBorder"></param>
            <param name="dialogBoxBorderThickness"></param>
            <param name="borderBackground"></param>
            <param name="labelBackground"></param>
            <param name="labelForeground"></param>
            <param name="labelMargin"></param>
            <param name="labelHeight"></param>
            <param name="labelFontSettings"></param>
            <param name="questionFontSettings"></param>
            <param name="questionText"></param>
            <param name="questionDefaultText"></param>
            <param name="questionTextMargin"></param>
            <param name="questionTextBoxMargin"></param>
            <param name="questionTextBackground"></param>
            <param name="questionTextBoxBackground"></param>
            <param name="buttonBackgrounds"></param>
            <param name="buttonBorders"></param>
            <param name="buttonOnMouseOverColors"></param>
            <param name="OKClickAction"></param>
            <param name="CANCELClickAction"></param>
            <param name="COMMON_CLOSEClickAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Dialogs.DialogHelpers.ShowCustomFormDialog(System.Windows.Controls.Canvas,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Boolean,System.Action{System.Windows.Controls.StackPanel,System.Windows.Controls.Border,System.Windows.Controls.Border,System.Windows.Controls.Label})">
            <summary>
            Display a Custom Form Dialog. Will NOT display if another dialog with the SAME dialogGuid is already displaying. buildFormAction contains StackPanel for body, okButton Border, cancelButton Border, and title Label.
            </summary>
            <param name="canVas"></param>
            <param name="dialogGuid"></param>
            <param name="caption"></param>
            <param name="width"></param>
            <param name="internalGridRowHeight"></param>
            <param name="borderWidth"></param>
            <param name="borderHeight"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="dialogBoxBorder"></param>
            <param name="dialogBoxBorderThickness"></param>
            <param name="borderBackground"></param>
            <param name="labelBackground"></param>
            <param name="buttonBackgrounds"></param>
            <param name="buttonBorders"></param>
            <param name="buttonOnMouseOverColors"></param>
            <param name="buildFormAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Dialogs.DialogHelpers.ShowOKDialog(System.Windows.Controls.Canvas,System.String,System.String,System.Double,System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Boolean)">
            <summary>
            Display an OK Dialog. Will NOT display if another dialog with the SAME dialogGuid is already displaying.
            </summary>
            <param name="canVas"></param>
            <param name="dialogGuid"></param>
            <param name="caption"></param>
            <param name="width"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="dialogBoxBorder"></param>
            <param name="dialogBoxBorderThickness"></param>
            <param name="borderBackground"></param>
            <param name="labelBackground"></param>
            <param name="buttonBackgrounds"></param>
            <param name="buttonBorders"></param>
            <param name="buttonOnMouseOverColors"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Dialogs.DialogHelpers.ShowYesNoCancelDialog(System.Windows.Controls.Canvas,System.String,System.String,System.Double,System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Boolean,System.Action{System.Boolean})">
            <summary>
            Display a YES-NO-CANCEL Dialog. Will NOT display if another dialog with the SAME dialogGuid is already displaying.
            </summary>
            <param name="canVas"></param>
            <param name="dialogGuid"></param>
            <param name="caption"></param>
            <param name="width"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="dialogBoxBorder"></param>
            <param name="dialogBoxBorderThickness"></param>
            <param name="borderBackground"></param>
            <param name="labelBackground"></param>
            <param name="buttonBackgrounds"></param>
            <param name="buttonBorders"></param>
            <param name="buttonOnMouseOverColors"></param>
            <param name="resultCallback"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.RichTextExt.AddParagraph(System.Windows.Documents.FlowDocument,System.String,System.Windows.FontStyle,System.Double,System.Windows.Media.Brush,System.Windows.FontWeight,System.String)">
            <summary>
            Helper method to add a Paragraph to a FlowDocument
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.RichTextExt.AddParagraph(System.Windows.Documents.FlowDocument,System.String,System.Windows.FontStyle,System.Double,System.Windows.Media.Brush,System.Windows.FontWeight,System.Windows.Documents.Run)">
            <summary>
            Helper method to add a Paragraph to a FlowDocument
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.CreateFlatGeometryButton(System.String,FasterWPF.FlatButtonHelpers.GeometryButtonSize,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Thickness,System.Object,System.Action{System.Object,FasterWPF.FlatButtonHelpers.FlatGeometryButtonEventArgs},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Create a new Border (FlatGeometryButton) applying the FlatDesignStyle with an Geometry Path (Icon) in the middle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.AddFlatButton``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,FasterWPF.FontSettings,FasterWPF.FontSettings,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Add a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.AddFlatButton``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.String,System.Double,System.Windows.FontWeight,System.Windows.FontStyle,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Add a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.AddFlatButton``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Add a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.AddFlatButton``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Add a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.AddFlatButton``1(FasterWPF.InnerChain{``0},System.Int32,System.Int32,System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Add a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.NewFlatButton(System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Create a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.NewFlatButton(System.String,System.Double,System.Double,System.String,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Create a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.NewFlatButton(System.Double,System.Double,System.String,System.Windows.VerticalAlignment,System.Windows.HorizontalAlignment,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Create a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.NewFlatButton(System.String,System.Double,System.Double,System.String,System.Windows.VerticalAlignment,System.Windows.HorizontalAlignment,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.CornerRadius,System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Create a new Border (FlatButton) applying the FlatDesignStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.CreateGridContainerForPath(System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Shapes.Path,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Used by Flat Geometry Button examples sourced from Syncfusion Metro Studio 2 - copyright free icons
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="path"></param>
            <param name="onMouseOverAction"></param>
            <param name="actionOnClick"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.CreateGridContainerForPath(System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Shapes.Path,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Object)">
            <summary>
            Used by Flat Geometry Button examples sourced from Syncfusion Metro Studio 2 - copyright free icons
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="path"></param>
            <param name="onMouseOverAction"></param>
            <param name="actionOnClick"></param>
            <param name="toolTipContent"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.CreateGridContainerForPath(System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Shapes.Path,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Windows.Thickness)">
            <summary>
            Used by Flat Geometry Button examples sourced from Syncfusion Metro Studio 2 - copyright free icons
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="path"></param>
            <param name="onMouseOverAction"></param>
            <param name="actionOnClick"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.CreateGridContainerForPath(System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Shapes.Path,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Windows.Thickness,System.Object)">
            <summary>
            Used by Flat Geometry Button examples sourced from Syncfusion Metro Studio 2 - copyright free icons
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="path"></param>
            <param name="onMouseOverAction"></param>
            <param name="actionOnClick"></param>
            <param name="padding"></param>
            <param name="toolTipContent"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.FlatButtonHelpers.CreateGridContainerForPath(System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.Shapes.Path,System.Action{System.Object,FasterWPF.ValueChangedEventArgs},System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs},System.Windows.Thickness,System.Object)">
            <summary>
            Used by Flat Geometry Button examples sourced from Syncfusion Metro Studio 2 - copyright free icons
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="borderBrush"></param>
            <param name="borderThickness"></param>
            <param name="path"></param>
            <param name="onMouseOverAction"></param>
            <param name="actionOnClick"></param>
            <param name="padding"></param>
            <param name="toolTipContent"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Factory.NewTabHeader(System.Windows.Controls.TabControl,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.String,System.Boolean,System.Action{System.Object,System.Windows.Input.MouseButtonEventArgs})">
            <summary>
            Create a ContentControl applying the ContemporaryStyle
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Factory.CreateLabelForGroupItem(System.Double,System.Double,System.Double,System.Windows.FontWeight,System.Windows.Thickness,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.HorizontalAlignment)">
            <summary>
            Create a Label via FrameworkElementFactory for use with ListBox or ListView Group Description
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Factory.CreateExpanderForGroupItem(System.Windows.FrameworkElementFactory,System.Boolean,System.Windows.Media.Brush,System.Windows.Thickness)">
            <summary>
            Create Expander for use with ListBox or ListView Group Description. Set factoryLabel to null if passing into method SetGroupExpanderFrameworkElementFactory.
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Factory.CreateExpanderForGroupItem(System.Windows.FrameworkElementFactory,System.Boolean,System.Windows.Media.Brush,System.Windows.Thickness,System.String,System.String,System.String,System.String,System.String,System.String,System.String,FasterWPF.ExpanderExt.Shape)">
            <summary>
            Create Expander for use with ListBox or ListView Group Description. Set factoryLabel to null if passing into method SetGroupExpanderFrameworkElementFactory.
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Factory.CreateExpanderForGroupItem(System.Windows.FrameworkElementFactory,System.Boolean,System.Windows.Media.Brush,System.Windows.Thickness,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,FasterWPF.ExpanderExt.Shape)">
            <summary>
            Create Expander for use with ListBox or ListView Group Description. Set factoryLabel to null if passing into method SetGroupExpanderFrameworkElementFactory.
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Factory.CreateStyleForGroupItem(System.Windows.FrameworkElementFactory,System.Windows.Thickness)">
            <summary>
            Create GroupItem Style for use with ListBox or ListView Group Description
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{``0})">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent Grid. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent Grid. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allows passing in custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent Grid. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent Grid. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allows passing in custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},System.Windows.Controls.Orientation)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom Orientation.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="orient"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},System.Windows.Controls.Orientation,FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom Orientation and GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="orient"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},System.Windows.Controls.Orientation)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom Orientation.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="orient"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom GridSettings
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},System.Windows.Controls.Orientation,FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom Orientation and GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="orient"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Func{System.Int32,``0,System.Windows.Controls.Dock})">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},System.Windows.Controls.Dock)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom Dock position.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="dock"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Func{System.Int32,``0,System.Windows.Controls.Dock},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Composites in a Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddComposites``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},System.Windows.Controls.Dock,FasterWPF.GridSettings)">
            <summary>
             Add Elements Cloned From a Prototype to Composites in a Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow passing in custom Dock position and GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="childColumn"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="dock"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRange``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{``0})">
            <summary>
            Add Elements Cloned From a Prototype to Children in a Range on a Parent Composite. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="parentRow"></param>
            <param name="parentColumn"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRange``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Children in a Range on a Parent Composite. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allows passing in custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="parentRow"></param>
            <param name="parentColumn"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRange``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to Children in a Range on a Parent Composite. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="parentRow"></param>
            <param name="parentColumn"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRange``1(System.Windows.Controls.Grid,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to Children in a Range on a Parent Composite. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allows passing in custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <param name="parentRow"></param>
            <param name="parentColumn"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="compositeGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInColumnRange``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Column Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInColumnRange``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Column Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="gridCompositeSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRowRange``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Row Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRowRange``1(System.Windows.Controls.StackPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Row Range on a Parent StackPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="gridCompositeSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInColumnRange``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Column Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInColumnRange``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Column Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="gridCompositeSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRowRange``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Row Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRowRange``1(System.Windows.Controls.WrapPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Row Range on a Parent WrapPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <param name="gridCompositeSettings"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInColumnRange``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Column Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRowRange``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0})">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Row Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="childColumn"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInColumnRange``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Column Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="childRow"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Generators.Generators.AddChildrenInRowRange``1(System.Windows.Controls.DockPanel,System.Int32,System.Int32,System.Int32,``0,System.Action{System.Int32,``0},FasterWPF.GridSettings)">
            <summary>
            Add Elements Cloned From a Prototype to a Single Composite as Children in a Row Range on a Parent DockPanel. Constructor action is provided to allow Initialization, BeginSettings...EndSettings, etc. Allow custom GridSettings.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="childColumn"></param>
            <param name="prototype"></param>
            <param name="constructorAction"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.GroupBoxExt.ApplyGroupBoxStrategyToRemoveExtraWhiteBorders(System.Windows.Controls.GroupBox,System.Double)">
            <summary>
            Applies a new ControlTemplate to Remove Unnecessary White Borders and to Set the Corner Radius
            </summary>
            <param name="expa"></param>
            <param name="cornerRadius"></param>
        </member>
        <member name="M:FasterWPF.DataGridExt.Refresh(System.Windows.Controls.DataGrid)">
            <summary>
            After adding a row, you may need to call Refresh
            </summary>
            <param name="sourceDataGrid"></param>
        </member>
        <member name="M:FasterWPF.Selectors.Select.RecurseUpParentFrameworkElements(System.Boolean,System.Int32,System.Windows.FrameworkElement)">
            <summary>
            Recurse Up All UI Elements and Return the Last One. Traverse Up Either the Visual Tree or the Logical Tree as Needed.
            </summary>
            <param name="displayTypesInMessageBoxes"></param>
            <param name="numParentsToGoUp"></param>
            <param name="TN"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.ActOnAllFrameworkElementsByClass(System.Windows.FrameworkElement,System.String,System.Boolean,System.Action{System.Windows.FrameworkElement})">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Act on All FrameworkElements filtered by Selector Class
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.ActOnAllFrameworkElementsByClass(System.Windows.FrameworkElement,System.String,System.String,System.Boolean,System.Action{System.Windows.FrameworkElement})">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Act on All FrameworkElements filtered by Selector Class
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.ActOnAllFrameworkElementsByClass(System.Windows.FrameworkElement,System.String,System.String,System.String,System.Boolean,System.Action{System.Windows.FrameworkElement})">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Act on All FrameworkElements filtered by Selector Class
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectAllFrameworkElementsByClass(System.Windows.FrameworkElement,System.String,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All FrameworkElements filtered by Selector Class
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectAllFrameworkElementsByClass(System.Windows.FrameworkElement,System.String,System.String,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All FrameworkElements filtered by Selector Class
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectAllFrameworkElementsByClass(System.Windows.FrameworkElement,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All FrameworkElements filtered by Selector Class
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.RetrieveCollection``1(``0)">
            <summary>
            Retrieve All Composites from a Parent
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.DisposeEventsOnAllParents(System.Windows.FrameworkElement)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Call DisposeEvents on each Parent
            </summary>
            <param name="root"></param>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectCompositeByKey(System.Windows.FrameworkElement,System.String)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Find the Composite that matches the Key
            </summary>
            <param name="root"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.TrySelectCompositeByKey(System.Windows.FrameworkElement,System.String,System.Windows.Controls.Border@)">
            <summary>
             Recurse Down Thru All Parents Within a Root Parent and Find the Composite that matches the Key. Won't Throw an Error if None Found; Merely Returns False
            </summary>
            <param name="root"></param>
            <param name="key"></param>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.ActOnParentFrameworkElements(System.Windows.FrameworkElement,System.Action{System.Windows.FrameworkElement})">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Perform the Action against each Parent
            </summary>
            <param name="root"></param>
            <param name="actionToPerform"></param>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectCompositesOnly(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All Composites
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectCompositeByName``1(System.Windows.FrameworkElement,System.String)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select Composite by Name
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectParentFrameworkElementsOnly(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All Parents
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectChildFrameworkElementsOnly(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All Child FrameworkElements
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectFrameworkElementsByType``1(System.Windows.FrameworkElement)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All FrameworkElements that match the Type T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectAllFrameworkElements(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All FrameworkElements
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectContainersFromAllTComposites``1(System.Windows.FrameworkElement,FasterWPF.ContainerType,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All Containers T From Within Any Composites
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.Selectors.Select.SelectAllHeaderedContent(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Recurse Down Thru All Parents Within a Root Parent and Select All HeaderedContent from HeaderedContentControls
            </summary>
            <param name="root"></param>
            <param name="displayTypesInMessageBoxes"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkinOnHeaderedContent(System.Windows.Window,System.Windows.Media.Brush,System.Action{System.Object,System.Windows.Media.Brush})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Headered Content to Perform Change Skin Action on
            </summary>
            <param name="startingPoint"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkin``1(System.Windows.Window,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Type to Perform Change Skin Action on
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startingPoint"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkin``1(System.Windows.Window,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Predicate{``0})">
            <summary>
             Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Type to Perform Change Skin Action on, Including Based On a Predicate
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startingPoint"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
            <param name="includeInChangeSkin"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkin``2(System.Windows.Window,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Type to Perform Change Skin Actions on
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <param name="startingPoint"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
            <param name="newBrush2"></param>
            <param name="changeSkinAction2"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkin``3(System.Windows.Window,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Type to Perform Change Skin Actions on
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <typeparam name="L"></typeparam>
            <param name="startingPoint"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
            <param name="newBrush2"></param>
            <param name="changeSkinAction2"></param>
            <param name="newBrush3"></param>
            <param name="changeSkinAction3"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkin``2(System.Windows.Window,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Predicate{``0},System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Predicate{``1})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Type to Perform Change Skin Actions on, Including Based On Predicates
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <param name="startingPoint"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
            <param name="includeInChangeSkin"></param>
            <param name="newBrush2"></param>
            <param name="changeSkinAction2"></param>
            <param name="includeInChangeSkin2"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkinOnContainers``1(System.Windows.Window,FasterWPF.ContainerType,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Containers by Type to Perform Change Skin Actions on
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startingPoint"></param>
            <param name="c"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkinOnContainers``1(System.Windows.Window,FasterWPF.ContainerType,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Predicate{``0})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Containers by Type to Perform Change Skin Actions on, Including Based On a Predicate
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startingPoint"></param>
            <param name="c"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
            <param name="includeInChangeSkin"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkinByClass(System.Windows.Window,System.String,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Class to Perform Change Skin Action on
            </summary>
            <param name="startingPoint"></param>
            <param name="selectorClassName"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
        </member>
        <member name="M:FasterWPF.BrushExt.ChangeSkinByClass(System.Windows.Window,System.String,System.Windows.Media.Brush,System.Action{System.Windows.FrameworkElement,System.Windows.Media.Brush},System.Predicate{System.Windows.FrameworkElement})">
            <summary>
            Pass In a Window (e.g App.Current.MainWindow) as the Starting Point before then Recursing Down to Collect Elements by Class to Perform Change Skin Action on, Including Based On a Predicate
            </summary>
            <param name="startingPoint"></param>
            <param name="selectorClassName"></param>
            <param name="newBrush"></param>
            <param name="changeSkinAction"></param>
            <param name="includeInChangeSkin"></param>
        </member>
        <member name="M:FasterWPF.ScrollViewerExt.SetCanContentScroll``1(``0)">
            <summary>
            Logical scrolling seems buggy. Therefore, always force physical scrolling by setting CanContentScroll equal to false
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
        </member>
        <member name="M:FasterWPF.TextBlockExt.GetText(System.Windows.Controls.TextBlock)">
            <summary>
            Helper method to return the inline run from a TextBlock (since that is what ListBoxExt uses). If no run, returns String.Empty
            </summary>
            <param name="txb"></param>
            <returns></returns>
        </member>
        <member name="T:FasterWPF.SettingsChain`1">
            <summary>
             Type that is passed-along each call in the BeginSettings...EndSettings chain
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FasterWPF.SettingsManager.BeginSettings``1(``0)">
            <summary>
            Start of a BeginSettings...EndSettings chain of Set methods. Alternatively, Set methods may be called directly on Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.EndSettings``1(FasterWPF.SettingsChain{``0})">
            <summary>
            End of a BeginSettings...EndSettings chain of Set methods. If this ending method is NOT called then the Set methods will not be applied.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.Set``2(FasterWPF.SettingsChain{``1},System.String,System.Object)">
            <summary>
            Store a Property value to be applied by Type to children when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.Set``2(FasterWPF.SettingsChain{``1},System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            Store a Property value to be applied to children at X-Y (row, column) when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetToCol``2(FasterWPF.SettingsChain{``1},System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
             Store a Property value to be applied to children starting at rowStart and counting for rowCount, at column, when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetToRow``2(FasterWPF.SettingsChain{``1},System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
             Store a Property value to be applied to children starting at colStart and counting for colCount, at row, when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetItemBorderSettings``1(FasterWPF.SettingsChain{``0},System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness)">
            <summary>
            Store settings to be applied on Border of children when BeginComposite...EndComposite chain is called.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="thickness"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetItemBorderSettingsFull``1(FasterWPF.SettingsChain{``0},System.Double,System.Double,System.Windows.Media.Brush,System.Windows.Thickness,System.Windows.CornerRadius,System.Windows.Thickness)">
            <summary>
            Store several settings to be applied on Border of children when BeginComposite...EndComposite chain is called.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="brush"></param>
            <param name="thickness"></param>
            <param name="cornerRadius"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetAttachedProperty``2(FasterWPF.SettingsChain{``1},System.String,System.Action{``0})">
            <summary>
            Store action to be applied by Type to children when BeginComposite...EndComposite chain is called. The action should update an Attached Property, e.g. obj => { obj.SetValue(Grid.ColumnSpanProperty, 2); }
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetAttachedProperty``2(FasterWPF.SettingsChain{``1},System.String,System.Int32,System.Int32,System.Action{``0})">
            <summary>
            Store action to be applied to children at X-Y (row, column) when BeginComposite...EndComposite chain is called. The action should update an Attached Property, e.g. obj => { obj.SetValue(Grid.ColumnSpanProperty, 2); }
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="propertyOnK"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.GetSetting``2(``0,System.String)">
            <summary>
            Get a stored setting by key, e.g. chain.GetSetting("IParent");
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.Set``2(``1,System.String,System.Object)">
            <summary>
             Store a Property value to be applied by Type to children when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetAttachedProperty``2(``1,System.String,System.Action{``0})">
            <summary>
             Store action to be applied by Type to children when BeginComposite...EndComposite chain is called. The action should update an Attached Property, e.g. obj => { obj.SetValue(Grid.ColumnSpanProperty, 2); }
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetAttachedProperty``2(``1,System.String,System.Int32,System.Int32,System.Action{``0})">
            <summary>
             Store action to be applied to children at X-Y (row, column) when BeginComposite...EndComposite chain is called. The action should update an Attached Property, e.g. obj => { obj.SetValue(Grid.ColumnSpanProperty, 2); }
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="propertyOnK"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.Set``2(``1,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
             Store a Property value to be applied to children at X-Y (row, column) when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.ChangeSetting``2(``1,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
             Change a previously stored Setting, a Property value to be applied to children at X-Y (row, column) when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.AddSetting``2(``1,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
             Add a stored Setting outside of BeginSettings . . . EndSettings, a Property value to be applied to children at X-Y (row, column) when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetToCol``2(``1,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            Store a Property value to be applied to children starting at rowStart and counting for rowCount, at column, when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetToRow``2(``1,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            Store a Property value to be applied to children starting at colStart and counting for colCount, at row, when BeginComposite...EndComposite chain is called. Property must be valid on K and writeable.
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="colStart"></param>
            <param name="colCount"></param>
            <param name="propertyOnK"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.StoreSetting``1(``0,System.String,System.Object)">
            <summary>
            Store a setting by key and value. Used internally by WPF Composites. Key should be unique and descriptive, e.g. source.StoreSetting("IParent", borderParent);
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.ContainsSetting``1(``0,System.String)">
            <summary>
            Checks whether a specific setting has already been stored in the Settings Dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.ContainsFontSettingAtXY``1(``0,System.Int32,System.Int32)">
            <summary>
            Checks whether a Font setting has already been stored in the Settings Dictionary at a particular row-column (X-Y coordinate)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.GetSettingsDictionary``1(``0)">
            <summary>
            Gets the Settings Dictionary that is stored on the Tag of the Parent.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass(System.Windows.FrameworkElement,System.String)">
            <summary>
            Set a Selector Class directly on Parent or any random FrameworkElement
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="selectorClassName"></param>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass(System.Windows.FrameworkElement,System.String,System.String)">
            <summary>
             Set Selector Class 1 and 2 directly on Parent or any random FrameworkElement
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="selectorClassName1"></param>
            <param name="selectorClassName2"></param>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass(System.Windows.FrameworkElement,System.String,System.String,System.String)">
            <summary>
            Set Selector Class 1, 2, and 3 directly on Parent or any random FrameworkElement
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="selectorClassName1"></param>
            <param name="selectorClassName2"></param>
            <param name="selectorClassName3"></param>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Set a Selector Class at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClassToCol``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Set a Selector Class starting at rowStart and counting for rowCount, at column.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass1ToCol``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Set a Selector Class starting at rowStart and counting for rowCount, at column.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClassToRow``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Set a Selector Class starting at colStart and counting for colCount, at row.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass1ToRow``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Set a Selector Class starting at colStart and counting for colCount, at row.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="column"></param>
            <param name="rowStart"></param>
            <param name="rowCount"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Set a Selector Class at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Set a Selector Class at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass1``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Set a Selector Class at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass2``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Set a 2nd Selector Class at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.SetSelectorClass3``1(FasterWPF.SettingsChain{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Set a 3rd Selector Class at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.UpdateSelectorClass``1(``0,System.String,System.Int32,System.Int32,FasterWPF.SettingsManager.SelectorPosition,System.String)">
            <summary>
            Update Selector Class in Selector Position (1, 2, or 3) at X-Y (row, column)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="selectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.UpdateSelectorClass``1(System.Windows.Controls.Border,System.Int32,System.Int32,FasterWPF.SettingsManager.SelectorPosition,System.String)">
            <summary>
            Update Selector Class in Selector Position (1, 2, or 3) at X-Y (row, column) where Border is a Composite
            </summary>
            <typeparam name="T"></typeparam>
            <param name="chain"></param>
            <param name="key"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="position"></param>
            <param name="newSelectorClassName"></param>
            <returns></returns>
        </member>
        <member name="M:FasterWPF.SettingsManager.UpdateSelectorClass(System.Windows.FrameworkElement,FasterWPF.SettingsManager.SelectorPosition,System.String)">
            <summary>
            Update Selector Class in Selector Position (1, 2, or 3) at X-Y (row, column) on Child (FrameworkElement)
            </summary>
            <param name="fe"></param>
            <param name="position"></param>
            <param name="newSelectorClassName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
